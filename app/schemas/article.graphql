type Article {
  id: ID!
  name: String!
  brief: String!
  content: String!
  categoryID: ID!
  category: Category!
  tags: [Tag]
  authorID: ID!
  author: User!
  createdAt: Time!
  updatedAt: Time!
}

input ArticleInput {
  name: String!
  categoryID: ID!
  brief: String!
  content: String!
  tags: [TagInput]
  authorID: ID!
}

extend type Mutation {
  CreateArticle(Article: ArticleInput!): ArticleResponse @hasRole(role: ADMIN)
  UpdateArticle(id: ID!, Article: ArticleInput!): ArticleResponse
    @hasRole(role: ADMIN)
  DeleteArticle(id: ID!): ArticleResponse @hasRole(role: ADMIN)
}

extend type Query {
  GetArticleById(id: ID!): ArticleResponse
  GetAllArticles: ArticleResponse
  GetArticlesByTags(tags: [TagInput!]): ArticleResponse
  GetArticlesByCategory(category: CategoryInput!): ArticleResponse
}

type ArticleResponse {
  message: String!
  status: Int!
  data: Article
  dataList: [Article]
}

type Subscription {
  articleAdded: Article!
}
